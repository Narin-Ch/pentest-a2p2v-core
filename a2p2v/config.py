#!/usr/bin/env python3.7
#
#  Copyright (C) 2018-2021 Toshiba Corporation and Perspecta Labs, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

try:
    import importlib.resources as pkg_resources
except ImportError:
    # Try backported to PY<37 `importlib_resources`.
    import importlib_resources as pkg_resources


import appdirs
import configparser
import os, sys

from . import data  # relative-import the *package* containing the data file

# appname and appauthor are used for determining configuration directory
appname = 'a2p2v'
appauthor = 'PerspectaLabs'

# The name of the configuration file
CONFIG_FILENAME = 'a2p2v.conf'

def get_config_dir():
    '''Get the name of the configuration directory
    On Linux, this is $HOME/.config/a2p2v
    Returns:
        str: name of the configuration directory
    '''
    return appdirs.user_config_dir(appname, appauthor)

def get_config_filename():
    '''Get the full path and name of the configuration file
    On Linux, this is $HOME/.config/a2p2v/a2p2v.conf
    Returns:
        str: full path and name of the configuration file
    '''
    config_dir = get_config_dir()
    filename = os.path.join(config_dir, CONFIG_FILENAME)
    return filename

def get_default_config():
    '''Get a default configuration
    Returns:
        str: default configuration
    '''
    default_config = pkg_resources.read_text(data, 'a2p2v.conf')

    return default_config

def create_default_config(config_filename):
    '''Create a default configuration file
    Arguments:
        config_filename (str): name of the configuration file
    '''
    # Write the configuration to a file
    with open(config_filename, 'w') as configfile:
        for line in get_default_config().split('\n'):
            line = line.lstrip()
            configfile.write(line)
            configfile.write('\n')

def load_config():
    '''Load the configuration for the tool.
    If the configuration does not already exist, populate
    Returns:
        configparser.ConfigParser: populated config parser
    '''
    # Get the configuration directory and filename
    config_dir = get_config_dir()
    config_filename = get_config_filename()

    # Create the configuration directory if it does not exist
    if not os.path.isdir(config_dir):
        os.mkdir(config_dir)

    # Create a default configuration file if one does not exist
    if not os.path.isfile(config_filename):
        create_default_config(config_filename)

    # Load the configuration
    config = configparser.ConfigParser()
    try:
        config.read(config_filename)
    except Exception as e:
        print("Error reading configuration file: {}".format(str(e)))
        sys.exit()
    return config

# Load the configuration file as a global variable at the module level
config = load_config()

def main():
    print(config['INPUT']['default_datafile'])

if __name__ == '__main__':
    main()
